/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define COMBINED 3



/ {
        macros {
                clrpckr: clrpckr {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_press &kp LSHFT>
                                , <&macro_tap &kp C>
                                , <&macro_release &kp LSHFT>
                                , <&macro_release &kp LGUI>
                                ;
                };
                lng_sw: lng_sw {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp SPACE>
                                , <&macro_release &kp LGUI>
                                ;
                }
                srccut: srccut {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_press &kp LSHFT>
                                , <&macro_tap &kp S>
                                , <&macro_release &kp LSHFT>
                                , <&macro_release &kp LGUI>
                                ;
                }
        };

        conditional_layers {
          compatible = "zmk,conditional-layers";
          tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
          };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &mt LGUI RBKT   &kp Q &kp W &kp E &kp R &kp T                  &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT 
   &mt LCTRL GRAVE &kp A &kp S &kp D &kp F &kp G                  &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SINGLE_QUOTE
   &mt LALT MINUS &kp Z &kp X &kp C &kp V &kp B                   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp BACKSLASH
        &lt RAISE TAB &mt LSFHIFT SPACE &lt LOWER ENTER                  &lt LOWER ESC &kp BACKSPACE &lt RAISE DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &none &none &none &none &kp F5        &kp EXCL   &kp AT   &kp Hash &kp DLLR    &kp PERCENT &kp RGUI
   &none &none &none &none &kp F2 &clrpckr        &kp CRRT &kp AMPERSAND &kp ASTERISK &kp LPAR &kp RPAR &kp RCTRL
   &kp EQUAL &none &none &none &none &lng_sw       &none &none &none &none &none &kp RALT
                &none     &none       &none      &none  &none   &none
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  LGUI  &kp ASTERISK &kp N7 &kp N8 &kp N9 &kp PLUS   &kp C_VOL_UP &kp HOME  &kp UP &kp PG_UP &none &kp RGUI
   &kp LCTRL &kp SLASH &kp N4 &kp N5 &kps N6 &kp MINUS      &kp C_MUTE &kp LEFT &kp DOWN  &kp RIGHT &none &kp RCTRL
   &kp EQUAL &kp N0 &kp N1 &kp N2 &kp N3 &kp DOT      &kp C_VOL_DN &kp END  &kp C_MUTE  &kp PG_DN &none &kp RALT
                             &trans &trans &trans   &trans &trans &trans
                        >;
                };

                combined_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &srccut  &kp F1 &kp F2 &kp F3 &kp F4 &none   &kp KP_NUM &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
   &none &kp F5  &kp F6 &kp F7   &kp F8 &none   &kp SCROLLLOCK &bt BT_SEL 4 &none  &none &none &none
   &none &kp F9  &kp F10 &kp F11 &kp F12 &none      &kp CAPS &none &none &none &none &none
                &trans &trans  &trans   &trans   &trans    &trans
                        >;
                };
        };
};
